"use strict";(self.webpackChunkcmcs_docs=self.webpackChunkcmcs_docs||[]).push([[526],{4137:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>g});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),s=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},m=function(t){var e=s(t.components);return a.createElement(p.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),u=s(n),c=r,g=u["".concat(p,".").concat(c)]||u[c]||d[c]||i;return n?a.createElement(g,l(l({ref:e},m),{},{components:n})):a.createElement(g,l({ref:e},m))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[u]="string"==typeof t?t:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4257:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(4137));const i={slug:"prompting_basics",title:"Prompting Basics",authors:"PasinduUd",tags:["Prompting"]},l="Prompting Basics",o={permalink:"/cmcs-docs/blog/prompting_basics",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-04-20-prompting_basics.md",source:"@site/blog/2023-04-20-prompting_basics.md",title:"Prompting Basics",description:"To understand the different types of prompting methods, it is important to first understand the basics of prompting notation. The following table summarizes the different components of prompting notation:",date:"2023-04-20T00:00:00.000Z",formattedDate:"April 20, 2023",tags:[{label:"Prompting",permalink:"/cmcs-docs/blog/tags/prompting"}],readingTime:1.805,hasTruncateMarker:!0,authors:[{name:"Pasindu Udawatta",title:"Lingua maintainer",url:"https://github.com/PasinduUd",imageURL:"https://avatars.githubusercontent.com/u/61894712?v=4",key:"PasinduUd"}],frontMatter:{slug:"prompting_basics",title:"Prompting Basics",authors:"PasinduUd",tags:["Prompting"]},nextItem:{title:"Understanding Language Model Prompting",permalink:"/cmcs-docs/blog/Understanding_Language_Model_Prompting"}},p={authorsImageUrls:[void 0]},s=[],m={toc:s},u="wrapper";function d(t){let{components:e,...n}=t;return(0,r.kt)(u,(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"To understand the different types of prompting methods, it is important to first understand the basics of prompting notation. The following table summarizes the different components of prompting notation:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Notation"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Input"),(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},'"I love this movie."'),(0,r.kt)("td",{parentName:"tr",align:null},"One or multiple texts")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Output"),(0,r.kt)("td",{parentName:"tr",align:null},"y"),(0,r.kt)("td",{parentName:"tr",align:null},"++ (very positive)"),(0,r.kt)("td",{parentName:"tr",align:null},"Output label or text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Prompting Function"),(0,r.kt)("td",{parentName:"tr",align:null},"fprompt(x)"),(0,r.kt)("td",{parentName:"tr",align:null},"[X]"," Overall, it was a ","[Z]"," movie."),(0,r.kt)("td",{parentName:"tr",align:null},"A function that converts the input into a specific form by inserting the input x and adding a slot ","[Z]"," where answer z may be filled later.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Prompt"),(0,r.kt)("td",{parentName:"tr",align:null},"x'"),(0,r.kt)("td",{parentName:"tr",align:null},'"I love this movie. Overall, it was a ',"[Z]",' movie."'),(0,r.kt)("td",{parentName:"tr",align:null},"A text where ","[X]"," is instantiated by input x but answer slot ","[Z]"," is not.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Filled Prompt"),(0,r.kt)("td",{parentName:"tr",align:null},"ffill(x', z)"),(0,r.kt)("td",{parentName:"tr",align:null},'"I love this movie. Overall, it was a bad movie."'),(0,r.kt)("td",{parentName:"tr",align:null},"A prompt where slot ","[Z]"," is filled with any answer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Answered Prompt"),(0,r.kt)("td",{parentName:"tr",align:null},"ffill(x', z","*",")"),(0,r.kt)("td",{parentName:"tr",align:null},'"I love this movie. Overall, it was a good movie."'),(0,r.kt)("td",{parentName:"tr",align:null},"A prompt where slot ","[Z]"," is filled with a true answer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Answer"),(0,r.kt)("td",{parentName:"tr",align:null},"z"),(0,r.kt)("td",{parentName:"tr",align:null},'"good", "fantastic", "boring"'),(0,r.kt)("td",{parentName:"tr",align:null},"A token, phrase, or sentence that fills ","[Z]",".")))),(0,r.kt)("p",null,"In this table, ",(0,r.kt)("inlineCode",{parentName:"p"},"x")," represents the input text, which can be one or multiple texts. ",(0,r.kt)("inlineCode",{parentName:"p"},"y")," represents the output label or text that the prompting method is trying to generate. The prompting function ",(0,r.kt)("inlineCode",{parentName:"p"},"fprompt(x)")," is a function that takes in input ",(0,r.kt)("inlineCode",{parentName:"p"},"x")," and returns a prompt ",(0,r.kt)("inlineCode",{parentName:"p"},"x'")," with a slot ",(0,r.kt)("inlineCode",{parentName:"p"},"[Z]")," for an answer. The filled prompt ",(0,r.kt)("inlineCode",{parentName:"p"},"ffill(x', z)")," is a prompt where the slot ",(0,r.kt)("inlineCode",{parentName:"p"},"[Z]")," is filled with any answer ",(0,r.kt)("inlineCode",{parentName:"p"},"z"),". The answered prompt ",(0,r.kt)("inlineCode",{parentName:"p"},"ffill(x', z*)")," is a prompt where the slot ",(0,r.kt)("inlineCode",{parentName:"p"},"[Z]")," is filled with a true answer ",(0,r.kt)("inlineCode",{parentName:"p"},"z*"),". The answer ",(0,r.kt)("inlineCode",{parentName:"p"},"z")," is a token, phrase, or sentence that fills the slot ",(0,r.kt)("inlineCode",{parentName:"p"},"[Z]"),"."),(0,r.kt)("p",null,"By using this notation, we can create different types of prompts for different tasks, such as question answering, summarization, sentiment analysis, and classification, using a single language model."))}d.isMDXComponent=!0}}]);